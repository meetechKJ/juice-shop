name: ZAP Security Scan - Fixed

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  zap-scan:
    runs-on: ubuntu-latest
    name: ZAP Security Scan
    
    # 権限を明示的に設定（Issue作成を無効化）
    permissions:
      contents: read
      actions: read
      
    steps:
    # 1. ソースコードをチェックアウト
    - name: Checkout code
      uses: actions/checkout@v4
      
    # 2. Node.js環境の準備
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14'
        cache: 'npm'
    
    # 3. 依存関係をインストール
    - name: Install dependencies
      run: |
        npm ci --legacy-peer-deps
        cd frontend && npm install --legacy-peer-deps && cd ..
    
    # 4. アプリケーションをビルドして起動
    - name: Build and Start Juice Shop
      run: |
        npm run build
        npm start &
        echo "Waiting for application to start..."
        sleep 60
        
        # 起動確認（リトライ機能付き）
        for i in {1..5}; do
          if curl -f http://localhost:3000; then
            echo "Application is running successfully"
            break
          else
            echo "Attempt $i: Application not ready, waiting..."
            sleep 15
            if [ $i -eq 5 ]; then
              echo "Application failed to start"
              exit 1
            fi
          fi
        done
    
    # 5. スキャン結果ディレクトリを作成（権限問題を回避）
    - name: Prepare scan directories
      run: |
        mkdir -p zap-reports
        chmod 777 zap-reports
    
    # 6. ZAP Baseline Scan（Issue作成を無効化）
    - name: ZAP Baseline Scan
      continue-on-error: true
      run: |
        docker run -v $(pwd)/zap-reports:/zap/wrk/:rw \
          --network=host \
          -t ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py \
          -t http://localhost:3000 \
          -J zap-baseline-report.json \
          -w zap-baseline-report.md \
          -r zap-baseline-report.html \
          -a \
          --hook=/zap/auth_hook.py || true
    
    # 7. ZAP Full Scan（Issue作成を無効化）
    - name: ZAP Full Scan
      continue-on-error: true
      run: |
        docker run -v $(pwd)/zap-reports:/zap/wrk/:rw \
          --network=host \
          -t ghcr.io/zaproxy/zaproxy:stable \
          zap-full-scan.py \
          -t http://localhost:3000 \
          -J zap-full-report.json \
          -w zap-full-report.md \
          -r zap-full-report.html \
          -a \
          -j || true
    
    # 8. スキャン結果をアーティファクトとして保存
    - name: Upload ZAP scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-security-scan-results
        path: |
          zap-reports/
        retention-days: 30
    
    # 9. スキャン結果のサマリーを表示
    - name: Display Scan Summary
      if: always()
      run: |
        echo "=== ZAP Scan Summary ==="
        if [ -f "zap-reports/zap-baseline-report.json" ]; then
          echo "✅ Baseline scan completed"
          # JSONから重要な情報を抽出
          if command -v jq &> /dev/null; then
            echo "High risk alerts: $(jq '.site[].alerts[] | select(.riskdesc=="High") | length' zap-reports/zap-baseline-report.json 2>/dev/null || echo "0")"
            echo "Medium risk alerts: $(jq '.site[].alerts[] | select(.riskdesc=="Medium") | length' zap-reports/zap-baseline-report.json 2>/dev/null || echo "0")"
          fi
        else
          echo "❌ Baseline scan failed or incomplete"
        fi
        
        if [ -f "zap-reports/zap-full-report.json" ]; then
          echo "✅ Full scan completed"
        else
          echo "❌ Full scan failed or incomplete"
        fi
        
        echo "📄 Reports available in artifacts section"
    
    # 10. 重要な脆弱性があった場合の通知（オプション）
    - name: Check for High Risk Vulnerabilities
      if: always()
      run: |
        if [ -f "zap-reports/zap-baseline-report.json" ] || [ -f "zap-reports/zap-full-report.json" ]; then
          echo "::notice::ZAP security scan completed. Check the artifacts for detailed reports."
        else
          echo "::warning::ZAP scan may have encountered issues. Please check the logs."
        fi
